package ptbm

model Opt {
  
  param RealDistribution dist
  random VariationalReal realization
  
  laws {
    logf(dist, realization, AnnealingParameter annealing = new AnnealingParameter) { 
      if (!realization.variationalActive)
        return dist.logDensity(realization.doubleValue)
      val alpha = annealing.doubleValue 
      if (alpha == 0.0) return realization.variationalLogDensity
      if (alpha == 1.0) return dist.logDensity(realization.doubleValue)
      return alpha * dist.logDensity(realization.doubleValue) + (1.0 - alpha) * realization.variationalLogDensity
    }
  }
  
  generate(it) {
    if (realization.variationalActive)
      realization.variationalSample(it) 
    else
      realization.set(dist.sample(it))
  }
  
}