package ptbm

model Opt {
  
  param RealDistribution distribution
  random VariationalReal realization
  
  laws {
    logf(distribution, realization, AnnealingParameter annealing = new AnnealingParameter) { 
      if (!realization.variationalActive)
        return distribution.logDensity(realization.doubleValue)
      val alpha = annealing.doubleValue 
      if (alpha == 0.0) return realization.variationalLogDensity
      if (alpha == 1.0) return distribution.logDensity(realization.doubleValue)
      return alpha * distribution.logDensity(realization.doubleValue) + (1.0 - alpha) * realization.variationalLogDensity
    }
  }
  
  generate(it) {
    if (realization.variationalActive)
      realization.variationalSample(it) 
    else
      realization.set(distribution.sample(it))
  }
  
}